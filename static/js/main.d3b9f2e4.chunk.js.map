{"version":3,"sources":["../node_modules/peerjs/dist sync","components/PeerContext.tsx","components/Home.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","PeerContext","createContext","PeerContextProvider","children","useState","peer","setPeer","useEffect","p","Peer","nanoid","host","secure","on","console","log","err","type","window","location","reload","Provider","value","Home","useContext","pullState","setPullState","shade","setShade","className","div","initial","opacity","y","exit","animate","style","background","header","height","drag","onDragStart","onDragEnd","onDrag","i","Math","abs","offset","dragConstraints","top","bottom","span","transition","repeat","Infinity","repeatType","stiffness","damping","App","theme","createMuiTheme","palette","primary","main","ThemeProvider","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d3b9f2e4.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 38;","import React, { createContext, useEffect, useState } from \"react\";\n\n// utils\nimport Peer from \"peerjs\";\nimport { nanoid } from \"nanoid\";\n\ninterface ContextProps {\n  peer: Peer;\n}\n\nexport const PeerContext = createContext<Partial<ContextProps>>({});\n\nexport function PeerContextProvider({ children }: { children: any }) {\n  const [peer, setPeer] = useState<Peer>();\n\n  useEffect(() => {\n    const p = new Peer(nanoid(5), {\n      host: \"ciapeer.herokuapp.com\",\n      secure: true,\n    });\n\n    p.on(\"open\", (id) => {\n      setPeer(p);\n      console.log(id);\n    });\n\n    p.on(\"error\", (err) => {\n      if (err.type === \"unavailable-id\") {\n        window.location.reload();\n      }\n    });\n  }, []);\n\n  return (\n    <PeerContext.Provider value={{ peer }}>{children}</PeerContext.Provider>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { PeerContext } from \"./PeerContext\";\nimport { AnimatePresence, motion, useMotionValue } from \"framer-motion\";\nimport \"./css/home.css\";\n\nimport SettingsEthernetOutlinedIcon from \"@material-ui/icons/SettingsEthernetOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nexport default function Home() {\n  const { peer } = useContext(PeerContext);\n\n  const [pullState, setPullState] = useState(0);\n  const [shade, setShade] = useState(false);\n  useEffect(() => {\n    console.log(pullState);\n  }, [pullState]);\n\n  return (\n    <div className=\"home\">\n      <AnimatePresence>\n        {shade && pullState > 0 ? (\n          <motion.div\n            initial={{ opacity: 0, y: 100 }}\n            exit={{ opacity: 0, y: 200 }}\n            animate={{\n              opacity: 1,\n              y: 0,\n            }}\n            className=\"shade-menu\"\n          >\n            <div\n              style={{ background: pullState === 3 ? \"var(--accent)\" : \"\" }}\n              className=\"menu-item\"\n            >\n              <p>what is this?</p>\n              <HelpOutlineIcon />\n            </div>\n            <div\n              style={{ background: pullState === 2 ? \"var(--accent)\" : \"\" }}\n              className=\"menu-item\"\n            >\n              <p>share id</p>\n              <ShareOutlinedIcon />\n            </div>\n            <div\n              style={{ background: pullState === 1 ? \"var(--accent)\" : \"\" }}\n              className=\"menu-item\"\n            >\n              <p>connect with</p>\n              <SettingsEthernetOutlinedIcon />\n            </div>\n          </motion.div>\n        ) : (\n          \"\"\n        )}\n      </AnimatePresence>\n      <motion.header>\n        {peer ? (\n          <motion.div\n            initial={{ opacity: 0, height: 0 }}\n            animate={{\n              opacity: 1,\n              height: 200,\n            }}\n            drag=\"y\"\n            onDragStart={() => {\n              setShade(true);\n              // setPullState(0);\n            }}\n            onDragEnd={() => {\n              setShade(false);\n              setPullState(0);\n            }}\n            onDrag={(e, i) => {\n              const y = Math.abs(i.offset.y);\n              if (y > 250 && y < 400) {\n                setPullState(1);\n              } else if (y >= 400 && y < 500) {\n                setPullState(2);\n              } else if (y >= 500 && y < 550) {\n                setPullState(3);\n              } else if (y <= 250) {\n                setPullState(0);\n              }\n            }}\n            dragConstraints={{ top: 0, bottom: 0 }}\n            className=\"peer-id\"\n          >\n            <div className=\"pull-up-indicator\">\n              <motion.span\n                initial={{ y: 5 }}\n                animate={{ y: -5 }}\n                transition={{\n                  repeat: Infinity,\n                  repeatType: \"reverse\",\n                  stiffness: 0.2,\n                  damping: 0.5,\n                }}\n              >\n                {!shade && pullState === 0 ? \"pull up\" : \"drag to select\"}\n              </motion.span>\n            </div>\n            <h6>you are</h6>\n            <p>{peer?.id}</p>\n          </motion.div>\n        ) : (\n          <motion.div\n            className=\"connecting-loader\"\n            initial={{\n              opacity: 0,\n              height: 0,\n              y: 0,\n              background: \"#0077ff\",\n            }}\n            animate={{\n              opacity: 1,\n              height: \"auto\",\n              background: \"coral\",\n              y: 0,\n            }}\n            exit={{ opacity: 0, height: 0 }}\n          >\n            <motion.p\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{\n                repeat: Infinity,\n                repeatType: \"reverse\",\n                stiffness: 0.2,\n                damping: 0.5,\n              }}\n            >\n              Assigning ID...\n            </motion.p>\n          </motion.div>\n        )}\n      </motion.header>\n    </div>\n  );\n}\n","import { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport React from \"react\";\nimport Home from \"./components/Home\";\nimport { PeerContextProvider } from \"./components/PeerContext\";\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"#0077ff\",\n      },\n    },\n  });\n  return (\n    <ThemeProvider theme={theme}>\n      <PeerContextProvider>\n        <Home />\n      </PeerContextProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}